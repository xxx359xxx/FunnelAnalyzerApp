#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ FunnelAnalyzerApp

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python run.py              # –ó–∞–ø—É—Å–∫ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    python run.py --port 8502   # –ó–∞–ø—É—Å–∫ –Ω–∞ –¥—Ä—É–≥–æ–º –ø–æ—Ä—Ç—É
    python run.py --debug       # –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏
"""

import os
import sys
import subprocess
import argparse
from pathlib import Path

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    required_packages = [
        'streamlit',
        'pandas', 
        'numpy',
        'plotly',
        'reportlab'
    ]
    
    missing_packages = []
    
    for package in required_packages:
        try:
            __import__(package)
        except ImportError:
            missing_packages.append(package)
    
    if missing_packages:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: {', '.join(missing_packages)}")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö –∫–æ–º–∞–Ω–¥–æ–π: pip install -r requirements.txt")
        return False
    
    print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    return True

def run_streamlit_app(port=8501, debug=False):
    """–ó–∞–ø—É—Å–∫ Streamlit –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è app.py
    app_path = Path(__file__).parent / 'app.py'
    if not app_path.exists():
        print(f"‚ùå –§–∞–π–ª app.py –Ω–µ –Ω–∞–π–¥–µ–Ω: {app_path}")
        return False
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Streamlit
    cmd = [
        sys.executable, 
        '-m', 'streamlit', 'run', 
        str(app_path),
        '--server.port', str(port),
        '--server.headless', 'false',
        '--browser.gatherUsageStats', 'false'
    ]
    
    if debug:
        cmd.extend(['--logger.level', 'debug'])
    
    print(f"üöÄ –ó–∞–ø—É—Å–∫ FunnelAnalyzerApp –Ω–∞ –ø–æ—Ä—Ç—É {port}...")
    print(f"üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:{port}")
    print("‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("-" * 50)
    
    try:
        # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        subprocess.run(cmd, check=True)
    except KeyboardInterrupt:
        print("\nüëã –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        return False
    except FileNotFoundError:
        print("‚ùå Streamlit –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ: pip install streamlit")
        return False
    
    return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    parser = argparse.ArgumentParser(
        description='–ó–∞–ø—É—Å–∫ FunnelAnalyzerApp - –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤–æ—Ä–æ–Ω–∫–∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–π'
    )
    
    parser.add_argument(
        '--port', 
        type=int, 
        default=8501,
        help='–ü–æ—Ä—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 8501)'
    )
    
    parser.add_argument(
        '--debug', 
        action='store_true',
        help='–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏'
    )
    
    parser.add_argument(
        '--skip-check', 
        action='store_true',
        help='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π'
    )
    
    args = parser.parse_args()
    
    print("üìä FunnelAnalyzerApp - –ê–Ω–∞–ª–∏–∑ –≤–æ—Ä–æ–Ω–∫–∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–π –≤ –≥–µ–º–±–ª–∏–Ω–≥–µ")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if not args.skip_check:
        if not check_dependencies():
            sys.exit(1)
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    success = run_streamlit_app(port=args.port, debug=args.debug)
    
    if not success:
        sys.exit(1)

if __name__ == '__main__':
    main()